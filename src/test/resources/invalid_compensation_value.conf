 $source = Source() {
  concreteLocation = 192.168.0.1/openstackpool,
  type             = source,
  outputFormat     = "temperature data from sensor XYZ",
  #meaningless for sources and should be ignored by parser:
  expectedDuration = 15.2
 }

 $step1 = Operator($source) {
  allowedLocations = 192.168.0.1/openstackpool1 192.168.0.2/openstackpool 192.168.0.3/openstackpool 192.168.0.4/openstackpool 192.168.0.5/openstackpool,
  concreteLocation = 192.168.0.2/openstackpool,
  inputFormat      = step1,
  type             = step1,
  outputFormat     = step2,
  size             = small,
  stateful = false
 }

 $step2 = Operator($step1) {
  allowedLocations = 192.168.0.1/openstackpool,
  inputFormat      = step1,
  type             = "step2",
  outputFormat     = "step3",
  size             = small,
  stateful         = true,
  expectedDuration = 15.2,
  scalingCPUThreshold = 20.4,
  scalingMemoryThreshold = 55.1,
  queueThreshold = 11.0,
  compensation = "someInvalidValue"
 }

# the parser should detect that step22 is never used as a source
 $step22 = Operator($step2) {
   allowedLocations = 192.168.0.1/openstackpool,
   inputFormat      = step1,
   type             = "step2",
   outputFormat     = "step3",
   size             = small,
   stateful         = true,
   expectedDuration = 15.2,
   scalingCPUThreshold = 20.4,
   scalingMemoryThreshold = 55.1,
   queueThreshold = 11.0
  }

 $step3 = Operator($step2) {
  allowedLocations = 192.168.0.1/openstackpool1 192.168.0.2/amazoncloud,
  inputFormat      = temperature "machine1 output data" "sensor 4 output data",
  type             = "step3",
  outputFormat     = "step4",
  size             = small,
  stateful = false,
  #scalingThreshold = maxDelay = "2.5",
  #expectedDuration = "750",
  #queueThreshold   = "100"
 }

 $step4 = Operator($step3) {
  allowedLocations = 192.168.0.1/openstackpool,
  inputFormat      = step3,
  type             = "step4",
  outputFormat     = "step5",
  size             = large,
  stateful = true,
  #scalingThreshold = maxDelay = "2.5",
  #expectedDuration = "1250",
  #queueThreshold   = "100"
 }

$step5 = Operator($step4) {
  allowedLocations = 192.168.0.1/openstackpool,
  inputFormat      = step4,
  type             = "step5",
  outputFormat     = "log",
  size             = medium,
  stateful = false,
  #scalingThreshold = maxDelay = "2.5",
  #expectedDuration = "2250",
  #queueThreshold   = "100"
 }

 $log = Sink($step5) {
  concreteLocation = 192.168.0.1/openstackpool,
  inputFormat      = "transformed data from step 5",
  type             = "logger for temperature data",
 }
